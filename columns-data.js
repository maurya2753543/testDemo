export const columnsData = {
    Common: {
      name: "Common",
      enabled: true,
      common: [
        {
          enabled: true,
          name: "Timestamp",
          header: "Timestamp",
          type: "ISOdateTime",
          category: "Common.common",
          cdmPath: "tests[0].results.testTime",
        },
        
        {
          enabled: true,
          name: "Test",
          header: "Test",
          type: "string",
          category: "Common.common",
          cdmPath: "tests[0].label",
        },
        
        {
          enabled: true,
          name: "Location",
          header: "Cable ID",
          type: "string",
          category: "Common.common",
          cdmPath: "tests[0].testLocations.label",
        },
        {
          enabled: true,
          name: "Status",
          header: "Status",
          type: "status",
          category: "Common.common",
          cdmPath: "tests[0].results.status",
        },
        {
            enabled: true,
            name: "technician",
            header: "Operator",
            type: "string",
            category: "Common.common",
            cdmPath: "assetInfo.techId",
        },
        {
            enabled: false,
            name: "Limit Type",
            header: "Limit Type",
            type: "string",
            category: "Common.common",
            cdmPath: "",
          },
        {
          enabled: true,
          name: "device",
          header: "Device",
          type: "string",
          category: "Common.common",
          cdmPath: "assetInfo.model",
        },
      ],
    },
    opticalloss: {
      name: "Optical Loss Test",
      enabled: true,
      measurements: [
        {
          enabled: true,
          name: "wavelength",
          header: "Wavelength",
          type: "number",
          category: "opticalloss.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].wavelengthNm",
        },
        {
          enabled: true,
          name: "insertionLoss",
          header: "Insertion Loss",
          type: "string",
          category: "opticalloss.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].lossdB",
        },
        {
          enabled: true,
          name: "measuredLevel",
          header: "Measured Level Loss",
          type: "string",
          category: "opticalloss.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].measuredLevel",
        },
        {
          enabled: true,
          name: "powerReferenceTime",
          header: "Reference Time",
          type: "ISOdateTime",
          category: "opticalloss.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].powerReferenceTime",
        },
        {
          enabled: true,
          name: "reference",
          header: "Reference",
          type: "number",
          category: "opticalloss.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].powerReferencedBm",
        },
      ],
      configuration: [
        {
            enabled: true,
            name: "upperThresholddB",
            header: "Upper Threshold (dB)",
            type: "number",
            category: "opticalloss.configuration",
            cdmPath: "tests[0].configuration.setup[0].upperThresholddB",
        },
        {
            enabled: true,
            name: "lowerThresholddB",
            header: "Lower Threshold (dB)",
            type: "number",
            category: "opticalloss.configuration",
            cdmPath: "tests[0].configuration.setup[0].lowerThresholddB",
        },
        {
            enabled: true,
            name: "upperMarginalThresholddB",
            header: "Upper Marginal Threshold (dB)",
            type: "number",
            category: "opticalloss.configuration",
            cdmPath: "tests[0].configuration.setup[0].upperMarginalThresholddB",
        },
        {
            enabled: true,
            name: "lowerMarginalThresholddB",
            header: "Lower Marginal Threshold (dB)",
            type: "number",
            category: "opticalloss.configuration",
            cdmPath: "tests[0].configuration.setup[0].lowerMarginalThresholddB",
        }
      ],
    },
    powermeter: {
      name: "Optical Power Test",
      enabled: false,
      measurements: [
        // todo: figure out a way to represent the 2nd and 3rd wavelength measurements
        {
          enabled: true,
          name: "wavelength",
          header: "Wavelength",
          type: "number",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].wavelengthNm",
        },
        {
          enabled: true,
          name: "absolutePowerdBm",
          header: "Power (dBm)",
          type: "number",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].absolutePowerdBm",
        },
        {
          enabled: true,
          name: "absolutePowerpW",
          header: "Power (pW)",
          type: "number",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].absolutePowerpW",
        },
        {
          enabled: true,
          name: "measuredLevel",
          header: "Level",
          type: "string",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].measuredLevel",
        },
        {
          enabled: true,
          name: "absoluteTestStatus",
          header: "Status",
          type: "string",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].absoluteTestStatus",
        },
        {
          enabled: true,
          name: "autoLambdaDetect",
          header: "Auto Lambda",
          type: "string",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].autoLambdaDetect",
        },
        {
          enabled: true,
          name: "modulation",
          header: "Modulation",
          type: "string",
          category: "powermeter.measurement",
          cdmPath: "tests[0].results.data.measuredResults[0].modulation",
        },
      ],
      configuration: [
        {
            enabled: true,
            name: "upperThresholddBm",
            header: "Upper Threshold (dBm)",
            type: "number",
            category: "powermeter.configuration",
            cdmPath: "tests[0].configuration.setup[0].upperThresholddBm",
        },
        {
            enabled: true,
            name: "lowerThresholddBm",
            header: "Lower Threshold (dBm)",
            type: "number",
            category: "powermeter.configuration",
            cdmPath: "tests[0].configuration.setup[0].lowerThresholddBm",
        },
        {
            enabled: true,
            name: "upperMarginalThresholddBm",
            header: "Upper Margin Threshold (dBm)",
            type: "number",
            category: "powermeter.configuration",
            cdmPath: "tests[0].configuration.setup[0].upperMarginalThresholddBm",
        },
        {
            enabled: true,
            name: "lowerMarginalThresholddBm",
            header: "Lower Margin Threshold (dBm)",
            type: "number",
            category: "powermeter.configuration",
            cdmPath: "tests[0].configuration.setup[0].lowerMarginalThresholddBm",
        }
      ],
    },
    OTDR: {
      name: "OTDR",
      enabled: true,
      measurements: [
        {
          enabled: true,
          name: "wavelength",
          header: "Wavelength",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].wavelength",
        },
        {
          enabled: true,
          name: "wavelengthTestStatus",
          header: "Wavelength Test Status",
          type: "string",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].wavelengthTestStatus",
        },
        {
          enabled: true,
          name: "acqusisionTime",
          header: "Acqusision Time",
          type: "datetime",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].acqDateTime",
        },
        {
          enabled: true,
          name: "length",
          header: "Length",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].fiberLength",
        },
        {
          enabled: true,
          name: "linkLoss",
          header: "Link Loss",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].linkLossdB",
        },
        {
          enabled: true,
          name: "linkOrl",
          header: "Return Loss",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].linkOrldB",
        },
        {
          enabled: true,
          name: "maxConnector",
          header: "Max Connector",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].maxConnectorMeasureddB",
        },
        {
          enabled: true,
          name: "maxReflectance",
          header: "Max Reflectance",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].maxReflectanceMeasureddB",
        },
        {
          enabled: true,
          name: "numEvents",
          header: "Number of Events",
          type: "number",
          category: "OTDR.measurement",
          cdmPath:
            "tests[0].results.data.otdrResults.measuredResults[0].events.length",
        },
      ],
      configuration: [{}],
    },
    fiberInspection: {
      name: "Fiber Inspection",
      enabled: true,
      measurements: [
        {
            enabled: true,
            name: "ZonePassAll",
            header: "passAll",
            type: "status",
            category: "fiberInspection.measurement",
            cdmPath:
              "tests[0].results.data.endfaces[0].overallEvaluationResult.passesAll",
        },
        {
          enabled: true,
          name: "ZoneA",
          header: "Zone A",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[0].passesAll",
        },
        {
          enabled: true,
          name: "ZoneB",
          header: "Zone B",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[1].passesAll",
        },
        {
          enabled: true,
          name: "ZoneC",
          header: "Zone C",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[2].passesAll",
        },
        {
          enabled: true,
          name: "ZoneD",
          header: "Zone D",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[3].passesAll",
        },
        {
          enabled: true,
          name: "ZoneE",
          header: "Zone E",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[4].passesAll",
        },
        {
          enabled: true,
          name: "ZoneF",
          header: "Zone F",
          type: "status",
          category: "fiberInspection.measurement",
          cdmPath:
            "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[5].passesAll",
        },
        
        //{ name: "ZonePassDefects",   header : "Zone Pass Defects",   type: "status", category: "measurement", cdmPath : "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[0].passesAll" },
        //{ name: "ZonePassScratches", header : "Zone Pass Scratches", type: "status", category: "measurement", cdmPath : "tests[0].results.data.endfaces[0].overallEvaluationResult.zones[0].passesAll" }
      ],
      configuration: [{}],
    },
    truepon: {
      name: "TruePON Test",
      enabled: true,
      measurements: [
        { enabled: true, name: "gponLoss",                           header : "gpon Loss",                        type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.loss" },
        { enabled: true, name: "gponlossMarginLower",                header : "gpon lossMarginLower",             type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.lossMarginLower" },
        { enabled: true, name: "gponlossMarginUpper",                header : "gpon lossMarginUpper Loss",        type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.lossMarginUpper" },
        { enabled: true, name: "gponlossTestStatus",                 header : "gpon lossTestStatus",              type: "status", category: "measurement", cdmPath : "tests[0].results.data.gpon.lossTestStatus" },
        { enabled: true, name: "gponoltId",                          header : "gpon oltId",                       type: "string", category: "measurement", cdmPath : "tests[0].results.data.gpon.oltId" },
        { enabled: true, name: "gponodnClass",                       header : "gpon odnClass",                    type: "sting",  category: "measurement", cdmPath : "tests[0].results.data.gpon.odnClass" },
        { enabled: true, name: "gponodnClassTestStatus",             header : "gpon odnClassTestStatus",          type: "status", category: "measurement", cdmPath : "tests[0].results.data.gpon.odnClassTestStatus" },
        { enabled: true, name: "gpontol",                            header : "gpon tol",                         type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.tol" },
        { enabled: true, name: "gponpowerDownstream",                header : "gpon powerDownstream",             type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.powerDownstream" },
        { enabled: true, name: "gponpowerDownstreamMarginLower",     header : "gpon powerDownstreamMarginLower",  type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.powerDownstreamMarginLower" },
        { enabled: true, name: "gponpowerDownstreamMarginUpper",     header : "gpon powerDownstreamMarginUpper",  type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.powerDownstreamMarginUpper" },
        { enabled: true, name: "gponpowerDownstreamSignalStatus",    header : "gpon powerDownstreamSignalStatus", type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.powerDownstreamSignalStatus" },
        { enabled: true, name: "gponpowerDownstreamTestStatus",      header : "gpon powerDownstreamTestStatus",   type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.powerDownstreamTestStatus" },

        { enabled: true, name: "xgsponLoss",                           header : "xgspon Loss",                        type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.loss" },
        { enabled: true, name: "xgsponlossMarginLower",                header : "xgspon lossMarginLower",             type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.lossMarginLower" },
        { enabled: true, name: "xgsponlossMarginUpper",                header : "xgspon lossMarginUpper Loss",        type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.lossMarginUpper" },
        { enabled: true, name: "xgsponlossTestStatus",                 header : "xgspon lossTestStatus",              type: "status", category: "measurement", cdmPath : "tests[0].results.data.xgspon.lossTestStatus" },
        { enabled: true, name: "xgsponoltId",                          header : "xgspon oltId",                       type: "string", category: "measurement", cdmPath : "tests[0].results.data.xgspon.oltId" },
        { enabled: true, name: "xgsponodnClass",                       header : "xgspon odnClass",                    type: "sting",  category: "measurement", cdmPath : "tests[0].results.data.xgspon.odnClass" },
        { enabled: true, name: "xgsponodnClassTestStatus",             header : "xgspon odnClassTestStatus",          type: "status", category: "measurement", cdmPath : "tests[0].results.data.xgspon.odnClassTestStatus" },
        { enabled: true, name: "xgspontol",                            header : "xgspon tol",                         type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.tol" },
        { enabled: true, name: "xgsponpowerDownstream",                header : "xgspon powerDownstream",             type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.powerDownstream" },
        { enabled: true, name: "xgsponpowerDownstreamMarginLower",     header : "xgspon powerDownstreamMarginLower",  type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.powerDownstreamMarginLower" },
        { enabled: true, name: "xgsponpowerDownstreamMarginUpper",     header : "xgspon powerDownstreamMarginUpper",  type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.powerDownstreamMarginUpper" },
        { enabled: true, name: "xgsponpowerDownstreamSignalStatus",    header : "xgspon powerDownstreamSignalStatus", type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.powerDownstreamSignalStatus" },
        { enabled: true, name: "xgsponpowerDownstreamTestStatus",      header : "xgspon powerDownstreamTestStatus",   type: "number", category: "measurement", cdmPath : "tests[0].results.data.xgspon.powerDownstreamTestStatus" }

      ],
      configuration: [{}],
    },
    ontdetection: {
      name: "ONT Detection",
      enabled: true,
      measurements: [
        { enabled: true, name: "gponoltId",                           header : "gpon oltId",                      type: "string", category: "measurement", cdmPath : "tests[0].results.data.gpon.oltId" },
        { enabled: true, name: "gponontId",                           header : "gpon ontId",                      type: "number", category: "measurement", cdmPath : "tests[0].results.data.gpon.ontId" },
        { enabled: true, name: "gponontSerialNumber",                 header : "gpon ontSerialNumber",            type: "string", category: "measurement", cdmPath : "tests[0].results.data.gpon.ontSerialNumber" },
        { enabled: true, name: "gponontStatus",                       header : "gpon ontStatus",                  type: "string", category: "measurement", cdmPath : "tests[0].results.data.gpon.ontStatus" },

        { enabled: true, name: "xgsponoltId",                           header : "xgspon oltId",                      type: "string", category: "measurement", cdmPath : "tests[0].results.data.xspon.oltId" },
        { enabled: true, name: "xgsponontId",                           header : "xgspon ontId",                      type: "number", category: "measurement", cdmPath : "tests[0].results.data.xspon.ontId" },
        { enabled: true, name: "xgsponontSerialNumber",                 header : "xgspon ontSerialNumber",            type: "string", category: "measurement", cdmPath : "tests[0].results.data.xspon.ontSerialNumber" },
        { enabled: true, name: "xgsponontStatus",                       header : "xgspon ontStatus",                  type: "string", category: "measurement", cdmPath : "tests[0].results.data.xspon.ontStatus" },
      ],
      configuration: [{}],
    },
    tier1: {
      name: "Optical Tier1",
      enabled: true,
      measurements: [                                                   // todo handle optical[wavelength]
        { enabled: true, name: "length",               header : "Length",              type: "string", category: "measurement", cdmPath : "tests[0].results.data.length" },
        { enabled: true, name: "lengthTestStatus",     header : "lengthTestStatus",    type: "string", category: "measurement", cdmPath : "tests[0].results.data.lengthTestStatus" },
        { enabled: true, name: "loss",                 header : "Loss",                type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]loss" },
        { enabled: true, name: "lossMarginUpper",      header : "lossMarginUpper",     type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]lossMarginUpper" },
        { enabled: true, name: "lossMarginLower",      header : "lossMarginLower",     type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]lossMarginLower" },
        { enabled: true, name: "lossTestStatus",       header : "lossTestStatus",      type: "status", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]lossTestStatus" },
        { enabled: true, name: "powerReference",       header : "powerReference",      type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]powerReference" },
        { enabled: true, name: "powerReferenceTime",   header : "powerReferenceTime",  type: "time",   category: "measurement", cdmPath : "tests[0].results.data.optical.[0]powerReferenceTime" },
        { enabled: true, name: "signalStatus",         header : "signalStatus",        type: "string", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]signalStatus" },
        { enabled: true, name: "wavelength",           header : "wavelength",          type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.[0]wavelength" },
      ],
      configuration: [{}],
    },
    tier1mpo: {
      name: "Optical Tier1 MPO",
      enabled: true,
      measurements: [                                                     // todo handle multiple wavelenghts and multiple channels
        { enabled: true, name: "length",                header : "Length",               type: "string", category: "measurement", cdmPath : "tests[0].results.data.length" },
        { enabled: true, name: "lengthTestStatus",      header : "lengthTestStatus",     type: "string", category: "measurement", cdmPath : "tests[0].results.data.lengthTestStatus" },
        { enabled: true, name: "wavelength",            header : "Wavelength",           type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.wavelength" },
        { enabled: true, name: "ChfiberNumberLocal",    header : "fiberNumberLocal",     type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]fiberNumberLocal" },
        { enabled: true, name: "ChfiberNumberRemote",   header : "fiberNumberRemote",    type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]fiberNumberRemote" },
        { enabled: true, name: "Chloss",                header : "loss",                 type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]loss" },
        { enabled: true, name: "ChlossMarginUpper",     header : "lossMarginUpper",      type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]lossMarginUpper" },
        { enabled: true, name: "ChlossMarginLower",     header : "lossMarginLower",      type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]lossMarginLower" },
        { enabled: true, name: "ChlossTestStatus",      header : "lossTestStatus",       type: "status", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]lossTestStatus" },
        { enabled: true, name: "Chpower",               header : "power",                type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]power" },
        { enabled: true, name: "ChpowerReference",      header : "powerReference",       type: "number", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]powerReference" },
        { enabled: true, name: "ChpowerReferenceTime",  header : "powerReferenceTime",   type: "time",   category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]powerReferenceTime" },
        { enabled: true, name: "ChsignalStatus",        header : "signalStatus",         type: "string", category: "measurement", cdmPath : "tests[0].results.data.optical.channel[0]signalStatus" },
      ],
      configuration: [{}],
    },
    fcompPro: {
      name: "FCompPRO",
      enabled: false,
      measurements: [{}],
      configuration: [{}],
    },
  };
  